import json
from PyQt6.QtWidgets import QApplication, QMainWindow, QListWidgetItem
from PyQt6.uic import loadUi
import sys
from PyQt6.QtGui import QColor
import requests

def get_last_pulse(pulsedata):
    # Разделяем данные по символу ')'
    pulse_records = pulsedata.split(')')
    if pulse_records[-1] == '':
        pulse_records.pop()  # Убираем пустую запись, если она есть
    # Берем последний непустой элемент
    last_record = pulse_records[-1]
    # Извлекаем значение пульса (последний элемент записи после '-')
    last_pulse = last_record.split('-')[-1]
    return last_pulse

def get_last_emotions(emotionsdata):
    # Разделяем данные по символу ')'
    emotions_records = emotionsdata.split(')')
    if emotions_records[-1] == '':
        emotions_records.pop()  # Убираем пустую запись, если она есть
    # Берем последний непустой элемент
    last_record = emotions_records[-1]
    # Извлекаем значение пульса (последний элемент записи после '-')
    last_emotions = last_record.split('-')[-1]
    return last_emotions

def sort_by_stress(users):
    """
    Сортирует пользователей по уровню стресса в порядке убывания.
    """
    def extract_stress(user):
        try:
            return float(get_last_emotions(user['emotions_data']))
        except ValueError:
            return 0.0  # Если не удалось преобразовать, считать стресс равным 0

    # Сортируем пользователей по уровню стресса (убывание)
    return sorted(users, key=extract_stress, reverse=True)

def get_stress_color(stress):
    if stress <= 100:
        return QColor("green")
    elif 101 <= stress <= 400:
        return QColor("yellow")
    elif 401 <= stress <= 1000:
        return QColor("red")
    else:
        return QColor("darkred")

class MainScreen(QMainWindow):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        loadUi("ui/AdminWindow.ui", self)
        self.resetBtn.clicked.connect(self.refresh)

        
        
    def refresh(self):
        # json_data = requests.get("http://38.0.101.76:8080/get_online").text
        # json_data = '[ { "nickname": "test4", "pulse_data": ")23-11-16-30-24-87.81)23-11-16-30-25-89.06)23-11-16-30-26-89.06)23-11-16-30-34-89.06)23-11-16-30-34-89.06)23-11-16-30-34-89.06)23-11-16-30-35-89.06)23-11-16-30-36-89.06)23-11-16-30-36-90.56)23-11-16-30-38-90.56)23-11-16-30-39-90.56)23-11-16-30-41-90.56)23-11-16-30-45-90.56)23-11-16-30-45-90.56)23-11-16-30-47-92.15)23-11-16-30-48-92.15)23-11-16-30-48-92.15)23-11-16-30-49-92.15)23-11-16-30-49-92.15)23-11-16-30-50-92.15)23-11-16-30-50-93.37)23-11-16-30-51-93.37)23-11-16-30-53-93.37)23-11-16-30-54-93.37)23-11-16-30-55-93.37", "emotions_data": "23-11-16-29-03-0.00)23-11-16-29-04-0.00)23-11-16-29-05-0.00)23-11-16-29-08-0.00)23-11-16-29-09-0.00)23-11-16-29-11-0.00)23-11-16-29-11-0.00)23-11-16-29-12-0.00)23-11-16-29-13-0.00)23-11-16-29-14-0.00)23-11-16-29-15-0.00)23-11-16-29-22-0.00)23-11-16-29-23-0.00)23-11-16-29-24-0.00)23-11-16-29-24-0.00)23-11-16-29-25-0.00)23-11-16-29-25-0.00)23-11-16-29-26-0.00)23-11-16-29-27-0.00)23-11-16-29-27-0.00)23-11-16-29-29-0.00)23-11-16-29-30-0.00)23-11-16-29-31-0.00)23-11-16-29-31-0.00)23-11-16-29-32-0.00)23-11-16-29-33-0.00)23-11-16-29-34-0.00)23-11-16-29-35-0.00)23-11-16-29-36-0.00)23-11-16-29-37-0.00)23-11-16-29-38-0.00)23-11-16-29-40-0.00)23-11-16-29-41-0.00)23-11-16-29-42-0.00)23-11-16-29-43-0.00)23-11-16-29-44-0.00)23-11-16-29-45-0.00)23-11-16-29-45-0.00)23-11-16-29-46-0.00)23-11-16-29-47-0.00)23-11-16-29-48-0.00)23-11-16-29-50-0.00)23-11-16-29-50-0.00)23-11-16-29-52-0.00)23-11-16-29-52-0.00)23-11-16-29-53-0.00)23-11-16-29-53-0.00)23-11-16-29-54-0.00)23-11-16-29-55-0.00)23-11-16-29-55-0.00)23-11-16-29-56-0.00)23-11-16-29-59-0.00)23-11-16-30-00-0.00)23-11-16-30-01-0.00)23-11-16-30-01-0.00)23-11-16-30-02-0.00)23-11-16-30-03-0.00)23-11-16-30-04-0.00)23-11-16-30-05-0.00)23-11-16-30-07-0.00)23-11-16-30-14-0.00)23-11-16-30-15-0.00)23-11-16-30-16-0.00)23-11-16-30-17-0.00)23-11-16-30-22-0.00)23-11-16-30-23-0.00)23-11-16-30-25-0.00)23-11-16-30-25-0.00)23-11-16-30-33-0.00)23-11-16-30-34-0.00)23-11-16-30-34-0.00)23-11-16-30-35-0.00)23-11-16-30-35-0.00)23-11-16-30-36-0.00)23-11-16-30-37-0.00)23-11-16-30-38-0.00)23-11-16-30-41-0.00)23-11-16-30-41-0.00)23-11-16-30-45-0.00)23-11-16-30-47-0.00)23-11-16-30-48-0.00)23-11-16-30-48-0.00)23-11-16-30-49-0.00)23-11-16-30-49-0.00)23-11-16-30-49-0.00)23-11-16-30-50-0.00)23-11-16-30-50-0.00)23-11-16-30-51-0.00)23-11-16-30-53-0.00)23-11-16-30-54-0.00)23-11-16-30-55-0.00", "status_now": "online" }, { "nickname": "text6", "pulse_data": "23-11-16-51-10-81.10)23-11-16-51-10-81.10)23-11-16-51-11-81.10)23-11-16-51-12-81.10)23-11-16-51-12-81.10)23-11-16-51-13-82.89)23-11-16-51-14-82.89)23-11-16-51-14-82.89)23-11-16-51-15-82.89)23-11-16-51-15-82.89)23-11-16-51-16-82.89)23-11-16-51-17-82.89)23-11-16-51-18-82.89)23-11-16-51-19-82.89)23-11-16-51-19-82.89)23-11-16-51-20-82.89)23-11-16-51-21-82.89)23-11-16-51-21-82.89)23-11-16-51-22-82.89)23-11-16-51-23-82.89)23-11-16-51-23-83.14)23-11-16-51-24-83.14)23-11-16-51-25-83.14)23-11-16-51-25-83.14)23-11-16-51-26-83.14)23-11-16-51-27-83.14)23-11-16-51-27-83.14)23-11-16-51-29-83.14)23-11-16-51-30-83.14)23-11-16-51-31-83.14)23-11-16-51-32-83.14)23-11-16-51-33-83.14)23-11-16-51-34-83.14)23-11-16-51-34-85.15)23-11-16-51-35-85.15)23-11-16-51-36-85.15)23-11-16-51-36-85.15)23-11-16-51-37-85.15)23-11-16-51-38-85.15)23-11-16-51-38-85.15)23-11-16-51-39-87.80)23-11-16-51-40-87.80)23-11-16-51-41-87.80)23-11-16-51-41-87.80)23-11-16-51-42-87.80)23-11-16-51-42-90.25)23-11-16-51-43-90.25)23-11-16-51-44-90.25)23-11-16-51-45-90.25)23-11-16-51-45-90.25)23-11-16-51-46-90.25)23-11-16-51-46-90.25)23-11-16-51-47-90.25)23-11-16-51-48-90.25)23-11-16-51-49-90.25)23-11-16-51-49-90.25)23-11-16-51-50-90.25)23-11-16-51-51-90.25)23-11-16-51-51-90.25)23-11-16-51-52-90.25)23-11-16-51-53-90.00)23-11-16-51-53-90.00)23-11-16-51-54-90.00)23-11-16-51-55-90.00)23-11-16-51-55-90.00)23-11-16-51-56-90.00)23-11-16-51-57-90.00)23-11-16-51-57-90.47)23-11-16-51-58-90.47)23-11-16-51-59-90.47)23-11-16-52-00-90.47)23-11-16-52-00-90.47)23-11-16-52-01-90.02)23-11-16-52-02-90.02)23-11-16-52-02-90.02)23-11-16-52-03-90.02)23-11-16-52-04-90.02)23-11-16-52-04-90.02)23-11-16-52-05-90.02)23-11-16-52-05-90.02)23-11-16-52-06-90.00)23-11-16-52-07-90.00)23-11-16-52-07-90.00)23-11-16-52-08-90.00)23-11-16-52-09-90.00)23-11-16-52-10-90.00)23-11-16-52-10-89.73)23-11-16-52-11-89.73)23-11-16-52-12-89.73)23-11-16-52-13-89.73)23-11-16-52-14-89.73)23-11-16-52-14-89.73)23-11-16-52-15-89.73)23-11-16-52-15-88.93)23-11-16-52-16-88.93)23-11-16-52-17-88.93)23-11-16-52-17-88.93)23-11-16-52-18-88.93)23-11-16-52-19-88.93)23-11-16-52-20-88.93)23-11-16-52-21-90.00)23-11-16-52-21-90.00)23-11-16-52-22-90.00)23-11-16-52-22-90.00)23-11-16-52-23-90.00)23-11-16-52-24-90.00)23-11-16-52-24-90.00)23-11-16-52-25-90.00)23-11-16-52-25-90.00)23-11-16-52-26-85.71)23-11-16-52-27-85.71)23-11-16-52-27-85.71", "emotions_data": "23-11-16-51-09-0.00)23-11-16-51-10-0.00)23-11-16-51-11-0.00)23-11-16-51-11-0.00)23-11-16-51-12-0.00)23-11-16-51-13-0.00)23-11-16-51-13-0.00)23-11-16-51-14-0.00)23-11-16-51-15-0.00)23-11-16-51-15-0.00)23-11-16-51-16-0.00)23-11-16-51-17-0.00)23-11-16-51-17-0.00)23-11-16-51-18-0.00)23-11-16-51-19-0.00)23-11-16-51-20-0.00)23-11-16-51-20-0.00)23-11-16-51-21-0.00)23-11-16-51-22-0.00)23-11-16-51-22-0.00)23-11-16-51-23-0.00)23-11-16-51-24-0.00)23-11-16-51-24-0.00)23-11-16-51-25-0.00)23-11-16-51-26-0.00)23-11-16-51-26-0.00)23-11-16-51-27-0.00)23-11-16-51-28-0.00)23-11-16-51-29-0.00)23-11-16-51-30-0.00)23-11-16-51-31-0.00)23-11-16-51-32-0.00)23-11-16-51-33-0.00)23-11-16-51-34-0.00)23-11-16-51-35-0.00)23-11-16-51-35-0.00)23-11-16-51-36-0.00)23-11-16-51-37-0.00)23-11-16-51-37-0.00)23-11-16-51-38-0.00)23-11-16-51-39-0.00)23-11-16-51-40-0.00)23-11-16-51-40-0.00)23-11-16-51-41-0.00)23-11-16-51-42-0.00)23-11-16-51-42-0.00)23-11-16-51-43-0.00)23-11-16-51-43-0.00)23-11-16-51-44-0.00)23-11-16-51-45-0.00)23-11-16-51-45-0.00)23-11-16-51-46-0.00)23-11-16-51-47-0.00)23-11-16-51-47-0.00)23-11-16-51-48-0.00)23-11-16-51-49-0.00)23-11-16-51-50-0.00)23-11-16-51-50-0.00)23-11-16-51-51-0.00)23-11-16-51-52-0.00)23-11-16-51-52-0.00)23-11-16-51-53-0.00)23-11-16-51-54-0.00)23-11-16-51-54-0.00)23-11-16-51-55-0.00)23-11-16-51-56-0.00)23-11-16-51-56-0.00)23-11-16-51-57-0.00)23-11-16-51-58-0.00)23-11-16-51-59-0.00)23-11-16-51-59-0.00)23-11-16-52-00-0.00)23-11-16-52-01-0.00)23-11-16-52-01-0.00)23-11-16-52-02-0.00)23-11-16-52-02-0.00)23-11-16-52-03-0.00)23-11-16-52-04-0.00)23-11-16-52-04-0.00)23-11-16-52-05-0.00)23-11-16-52-06-0.00)23-11-16-52-06-0.00)23-11-16-52-07-0.00)23-11-16-52-08-0.00)23-11-16-52-09-0.00)23-11-16-52-09-0.00)23-11-16-52-10-0.00)23-11-16-52-11-0.00)23-11-16-52-12-0.00)23-11-16-52-12-0.00)23-11-16-52-13-0.00)23-11-16-52-14-0.00)23-11-16-52-14-0.00)23-11-16-52-15-0.00)23-11-16-52-16-0.00)23-11-16-52-16-0.00)23-11-16-52-17-0.00)23-11-16-52-18-0.00)23-11-16-52-19-0.00)23-11-16-52-20-0.00)23-11-16-52-20-0.00)23-11-16-52-21-0.00)23-11-16-52-21-0.00)23-11-16-52-22-0.00)23-11-16-52-23-0.00)23-11-16-52-23-0.00)23-11-16-52-24-0.00)23-11-16-52-25-0.00)23-11-16-52-25-0.00)23-11-16-52-26-0.00)23-11-16-52-26-0.00)23-11-16-52-27-0.00)23-11-16-52-28-0.00", "status_now": "online" } ]'
        json_data = '[ { "nickname": "test1", "pulse_data": "23-11-16-30-24-87.81)23-11-16-30-25-89.06", "emotions_data": "23-11-16-51-18-528)23-11-16-51-18-100.00", "status_now": "online" }, { "nickname": "test2", "pulse_data": "23-11-16-30-24-87.81)23-11-16-30-25-89.06", "emotions_data": "23-11-16-51-18-124)23-11-16-51-18-675.00", "status_now": "online" } ]'
        data = json.loads(json_data)
        self.listWidgets.clear()
        sorted_data = sort_by_stress(data)

        for user in sorted_data:
            name = user['nickname']
            pulsedata = user['pulse_data']
            emotionsdata = user['emotions_data']
            last_emotion = get_last_emotions(emotionsdata)
            last_pulse = get_last_pulse(pulsedata)

            if str(last_emotion) == "0.00":
                last_emotion = "датчик пока не сообщил информацию"
                stress_value = 0.0
            else:
                stress_value = float(last_emotion)

            item = QListWidgetItem(f"Никнейм: {name}, Последний пульс: {last_pulse}, Индекс стресса: {last_emotion}")

            # Устанавливаем цвет в зависимости от уровня стресса
            item.setForeground(get_stress_color(stress_value))

            self.listWidgets.addItem(item)

        

app = QApplication(sys.argv)
window = MainScreen()
window.show()
app.exec()
